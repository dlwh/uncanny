package dlwh.uncanny.lj

import scalanlp.util.{Encoder, Index}


/**
 *
 * @author dlwh
 */

object Moods {
  // taken from XXX
  val moods = Index(Iterator(
    "dummy",
    "aggravated",
    "angry",
    "annoyed",
    "anxious",
    "bored",
    "confused",
    "crappy",
    "cranky",
    "depressed",
    "discontent",
    "energetic",
    "enraged",
    "enthralled",
    "exhausted",
    "happy",
    "high",
    "horny",
    "hungry",
    "infuriated",
    "irate",
    "jubilant",
    "lonely",
    "moody",
    "pissed%20off",
    "sad",
    "satisfied",
    "sore",
    "stressed",
    "thirsty",
    "thoughtful",
    "tired",
    "touched",
    "lazy",
    "drunk",
    "ditzy",
    "mischievous",
    "morose",
    "gloomy",
    "melancholy",
    "drained",
    "excited",
    "relieved",
    "hopeful",
    "amused",
    "determined",
    "scared",
    "frustrated",
    "indescribable",
    "sleepy",
    "unknown",
    "groggy",
    "hyper",
    "relaxed",
    "restless",
    "disappointed",
    "curious",
    "mellow",
    "peaceful",
    "bouncy",
    "nostalgic",
    "okay",
    "rejuvinated",
    "complacent",
    "content",
    "indifferent",
    "silly",
    "flirty",
    "calm",
    "refreshed",
    "optimistic",
    "pessimistic",
    "giggly",
    "pensive",
    "uncomfortable",
    "lethargic",
    "listless",
    "recumbent",
    "examinate",
    "embarrassed",
    "envious",
    "sympathetic",
    "sick",
    "hot",
    "cold",
    "worried",
    "loved",
    "awake",
    "working",
    "productive",
    "accomplished",
    "busy",
    "blah",
    "full",
    "unknown2",
    "grumpy",
    "weird",
    "nauseated",
    "estatic",
    "chipper",
    "rushed",
    "contemplative",
    "nerdy",
    "geeky",
    "cynical",
    "quixotic",
    "crazy",
    "creative",
    "artistic",
    "pleased",
    "bitchy",
    "guilty",
    "irritated",
    "blank",
    "apathetic",
    "dorky",
    "impressed",
    "naughty",
    "predatory",
    "dirty",
    "giddy",
    "surprised",
    "shocked",
    "rejected",
    "numb",
    "cheerful",
    "good",
    "distressed",
    "intimidated",
    "crushed",
    "devious",
    "thankful",
    "grateful",
    "jealous",
    "nervous"
  ))

  sealed abstract class Mood(val id: Int)
  case object Dummy extends Mood(0)
  case object Happy extends Mood(1)
  case object Sad extends Mood(2)
  case object Angry extends Mood(3)
  case object Anxious extends Mood(4)
  case object Other extends Mood(5)
  val coarseMoods = Index(Iterator(Dummy, Happy ,Sad, Angry, Anxious, Other))
  val coarseMoodMap = Map(
       "dummy" -> Dummy,
      "aggravated" -> Angry,
      "angry" -> Angry,
      "annoyed" -> Angry,
      "anxious" -> Anxious,
      "bored" -> Other,
      "confused" -> Other,
      "crappy" -> Sad,
      "cranky" -> Sad,
      "depressed" -> Sad,
      "discontent" -> Sad,
      "energetic" -> Happy,
      "enraged" -> Angry,
      "enthralled" -> Other,
      "exhausted" -> Other,
      "happy" -> Happy,
      "high" -> Other,
      "horny" -> Other,
      "hungry" -> Other,
      "infuriated" -> Angry,
      "irate" -> Angry,
      "jubilant" -> Happy,
      "lonely" -> Sad,
      "moody" -> Other,
      "pissed%20off" -> Angry,
      "sad" -> Sad,
      "satisfied" -> Happy,
      "sore" -> Other,
      "stressed" -> Anxious,
      "thirsty" -> Other,
      "thoughtful" -> Other,
      "tired" -> Other,
      "touched" -> Other,
      "lazy" -> Other,
      "drunk" -> Other,
      "ditzy" -> Other,
      "mischievous" -> Other,
      "morose" -> Sad,
      "gloomy" -> Sad,
      "melancholy" -> Sad,
      "drained" -> Sad,
      "excited" -> Happy,
      "relieved" -> Happy,
      "hopeful" -> Happy,
      "amused" -> Happy,
      "determined" -> Happy,
      "scared" -> Anxious,
      "frustrated" -> Anxious,
      "indescribable" -> Other,
      "sleepy" -> Other,
      "unknown" -> Other,
      "groggy" -> Other,
      "hyper" -> Happy,
      "relaxed" -> Happy,
      "restless" -> Anxious,
      "disappointed" -> Sad,
      "curious" -> Happy,
      "mellow" -> Other,
      "peaceful" -> Happy,
      "bouncy" -> Happy,
      "nostalgic" -> Other,
      "okay" -> Other,
      "rejuvinated" -> Happy,
      "complacent" -> Happy,
      "content" -> Happy,
      "indifferent" -> Other,
      "silly" -> Happy,
      "flirty"-> Happy ,
      "calm" -> Happy,
      "refreshed" -> Happy,
      "optimistic" -> Happy,
      "pessimistic" -> Sad,
      "giggly" -> Happy,
      "pensive" -> Other,
      "uncomfortable" -> Anxious,
      "lethargic" -> Sad,
      "listless" -> Sad,
      "recumbent" -> Other,
      "examinate" -> Other,
      "embarrassed" -> Anxious,
      "envious" -> Other,
      "sympathetic" -> Other,
      "sick" -> Other,
      "hot" -> Other,
      "cold" -> Other,
      "worried" -> Anxious,
      "loved" -> Happy,
      "awake" -> Other,
      "working" -> Other,
      "productive" -> Happy,
      "accomplished" -> Happy,
      "busy" -> Anxious,
      "blah" -> Sad,
      "full" -> Other,
      "unknown2" -> Other,
      "grumpy" -> Angry,
      "weird" -> Other,
      "nauseated"-> Other ,
      "estatic" -> Happy,
      "chipper" -> Happy,
      "rushed" -> Anxious,
      "contemplative" -> Other,
      "nerdy" -> Other,
      "geeky" -> Other,
      "cynical" -> Other,
      "quixotic" -> Other,
      "crazy" -> Other,
      "creative" -> Happy,
      "artistic" -> Happy,
      "pleased" -> Happy,
      "bitchy" -> Angry,
      "guilty" -> Anxious,
      "irritated" -> Angry,
      "blank" -> Sad,
      "apathetic" -> Sad,
      "dorky" -> Other,
      "impressed" -> Other,
      "naughty" -> Other,
      "predatory" -> Other,
      "dirty" -> Anxious,
      "giddy" -> Happy,
      "surprised" -> Other,
      "shocked" -> Anxious,
      "rejected" -> Sad,
      "numb" -> Sad,
      "cheerful" -> Happy,
      "good"-> Happy ,
      "distressed" -> Anxious,
      "intimidated" -> Anxious,
      "crushed" -> Sad,
      "devious" -> Other,
      "thankful" -> Other,
      "grateful" -> Other,
      "jealous" -> Angry,
     "nervous" -> Anxious
  )

  val coarseMoodArray: Array[Int] = Encoder.fromIndex(moods).tabulateArray(mood => coarseMoodMap(mood).id)


}
